{"version":3,"file":"hosted-form-v2-iframe-content.js","mappings":"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","sources":["webpack://@bigcommerce/checkout-sdk/webpack/bootstrap","webpack://@bigcommerce/checkout-sdk/webpack/runtime/define property getters","webpack://@bigcommerce/checkout-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://@bigcommerce/checkout-sdk/webpack/runtime/make namespace object","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/errors/standard-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/utility/set-prototype-of.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/errors/invalid-argument-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/url/parse-url.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/url/append-www.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/utility/bind-decorator.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/iframe/is-iframe-event.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/iframe/iframe-event-listener.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-storage.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/get-hosted-input-storage.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"@bigcommerce/request-sender\"","webpack://@bigcommerce/checkout-sdk/external commonjs \"rxjs\"","webpack://@bigcommerce/checkout-sdk/external commonjs \"rxjs/operators\"","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/iframe/iframe-event-poster.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/hosted-field-type.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/http-request/content-type.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/payment/manual-order-payment-request-sender.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/card-expiry-formatter.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"card-validator\"","webpack://@bigcommerce/checkout-sdk/external commonjs \"lodash\"","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/card-number-formatter.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/map-to-autocomplete-type.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-autocomplete-fieldset.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/hosted-field-events.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-events.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-card-expiry-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-card-number-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-aggregator.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/errors/invalid-hosted-form-value-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-manual-order-payment-handler.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"yup\"","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-validator.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-factory.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/map-to-accessibility-label.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/errors/invalid-hosted-form-config-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-initializer.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/initialize-hosted-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/notify-initialize-error.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { setPrototypeOf } from '../utility';\n\nimport CustomError from './custom-error';\n\n/**\n * This error type should not be constructed directly. It is a base class for\n * all custom errors thrown in this library.\n */\nexport default abstract class StandardError extends Error implements CustomError {\n    name = 'StandardError';\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = new Error(this.message).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import StandardError from './standard-error';\n\n/**\n * This error should be thrown when a method is unable to proceed because the\n * caller has not provided all the arguments according to their requirements,\n * i.e.: if an argument is missing or it is not the expected data type.\n */\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.name = 'InvalidArgumentError';\n        this.type = 'invalid_argument';\n    }\n}\n","import { InvalidArgumentError } from '../errors';\n\nimport Url from './url';\n\nexport default function parseUrl(url: string): Url {\n    if (!/^(https?:)?\\/\\//.test(url)) {\n        throw new InvalidArgumentError('The provided URL must be absolute.');\n    }\n\n    // new URL() is not supported in IE11, use anchor tag instead\n    const anchor = document.createElement('a');\n\n    anchor.href = url;\n\n    // IE11 returns 80 or 443 for the port number depending on the URL scheme,\n    // even if the port number is not specified in the URL.\n    const port =\n        anchor.port && url.indexOf(`${anchor.hostname}:${anchor.port}`) !== -1 ? anchor.port : '';\n\n    return {\n        hash: anchor.hash,\n        hostname: anchor.hostname,\n        href: anchor.href,\n        origin: `${anchor.protocol}//${anchor.hostname}${port ? `:${port}` : ''}`,\n        pathname: anchor.pathname,\n        port,\n        protocol: anchor.protocol,\n        search: anchor.search,\n    };\n}\n","import parseUrl from './parse-url';\nimport Url from './url';\n\nexport default function appendWww(url: Url): Url {\n    return parseUrl(\n        url.hostname.indexOf('www') === 0\n            ? url.href\n            : url.href.replace(url.hostname, `www.${url.hostname}`),\n    );\n}\n","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nfunction bindDecorator<T extends Method>(\n    target: object,\n    key: string,\n    descriptor: TypedPropertyDescriptor<T>,\n): TypedPropertyDescriptor<T>;\nfunction bindDecorator<T extends Constructor<object>>(target: T): T;\n\nfunction bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\nexport default bindDecorator;\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype).forEach((key) => {\n        const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n        if (!descriptor || key === 'constructor') {\n            return;\n        }\n\n        Object.defineProperty(\n            decoratedTarget.prototype,\n            key,\n            bindMethodDecorator(target.prototype, key, descriptor),\n        );\n    });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(\n    _: object,\n    key: string,\n    descriptor: TypedPropertyDescriptor<T>,\n): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this) as T;\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","import IframeEvent from './iframe-event';\n\nexport default function isIframeEvent<TEvent extends IframeEvent<TType>, TType extends string>(\n    object: any,\n    type: TType,\n): object is TEvent {\n    return object.type === type;\n}\n","import { appendWww, parseUrl } from '../url';\nimport { bindDecorator as bind } from '../utility';\n\nimport { IframeEventMap } from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport default class IframeEventListener<\n    TEventMap extends IframeEventMap<keyof TEventMap>,\n    TContext = undefined,\n> {\n    private _isListening: boolean;\n    private _listeners: EventListeners<TEventMap, TContext>;\n    private _sourceOrigins: string[];\n\n    constructor(sourceOrigin: string) {\n        this._sourceOrigins = [\n            parseUrl(sourceOrigin).origin,\n            appendWww(parseUrl(sourceOrigin)).origin,\n        ];\n        this._isListening = false;\n        this._listeners = {};\n    }\n\n    listen(): void {\n        if (this._isListening) {\n            return;\n        }\n\n        this._isListening = true;\n\n        window.addEventListener('message', this._handleMessage);\n    }\n\n    stopListen(): void {\n        if (!this._isListening) {\n            return;\n        }\n\n        this._isListening = false;\n\n        window.removeEventListener('message', this._handleMessage);\n    }\n\n    addListener<TType extends keyof TEventMap>(\n        type: TType,\n        listener: (event: TEventMap[TType], context?: TContext) => void,\n    ): void {\n        let listeners = this._listeners[type];\n\n        if (!listeners) {\n            this._listeners[type] = listeners = [];\n        }\n\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    }\n\n    removeListener<TType extends keyof TEventMap>(\n        type: TType,\n        listener: (event: TEventMap[TType], context?: TContext) => void,\n    ): void {\n        const listeners = this._listeners[type];\n\n        if (!listeners) {\n            return;\n        }\n\n        const index = listeners.indexOf(listener);\n\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    trigger<TType extends keyof TEventMap>(event: TEventMap[TType], context?: TContext): void {\n        const listeners = this._listeners[event.type];\n\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach((listener) => (context ? listener(event, context) : listener(event)));\n    }\n\n    @bind\n    private _handleMessage(messageEvent: MessageEvent): void {\n        if (\n            this._sourceOrigins.indexOf(messageEvent.origin) === -1 ||\n            !isIframeEvent(messageEvent.data as TEventMap[keyof TEventMap], messageEvent.data.type)\n        ) {\n            return;\n        }\n\n        const { context, ...event } = messageEvent.data;\n\n        this.trigger(event, context);\n    }\n}\n\ntype EventListeners<TEventMap, TContext = undefined> = {\n    [key in keyof TEventMap]?: Array<(event: TEventMap[key], context?: TContext) => void>;\n};\n","export default class HostedInputStorage {\n    private _nonce?: string;\n\n    setNonce(nonce: string): void {\n        this._nonce = nonce;\n    }\n\n    getNonce(): string | undefined {\n        return this._nonce;\n    }\n}\n","import HostedInputStorage from './hosted-input-storage';\n\nlet storage: HostedInputStorage | null;\n\nexport default function getHostedInputStorage(): HostedInputStorage {\n    storage = storage || new HostedInputStorage();\n\n    return storage;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@bigcommerce/request-sender\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rxjs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rxjs/operators\");","import { fromEvent } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { parseUrl } from '../url';\n\nimport IframeEvent from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport interface IframeEventPostOptions<\n    TSuccessEvent extends IframeEvent,\n    TErrorEvent extends IframeEvent,\n> {\n    errorType?: TErrorEvent['type'];\n    successType?: TSuccessEvent['type'];\n}\n\nexport default class IframeEventPoster<TEvent, TContext = undefined> {\n    private _targetOrigin: string;\n\n    constructor(targetOrigin: string, private _targetWindow?: Window, private _context?: TContext) {\n        this._targetOrigin = targetOrigin === '*' ? '*' : parseUrl(targetOrigin).origin;\n    }\n\n    post(event: TEvent): void;\n    post<\n        TSuccessEvent extends IframeEvent = IframeEvent,\n        TErrorEvent extends IframeEvent = IframeEvent,\n    >(\n        event: TEvent,\n        options: IframeEventPostOptions<TSuccessEvent, TErrorEvent>,\n    ): Promise<TSuccessEvent>;\n    post<\n        TSuccessEvent extends IframeEvent = IframeEvent,\n        TErrorEvent extends IframeEvent = IframeEvent,\n    >(\n        event: TEvent,\n        options?: IframeEventPostOptions<TSuccessEvent, TErrorEvent>,\n    ): Promise<TSuccessEvent> | void {\n        const targetWindow = this._targetWindow;\n\n        if (window === targetWindow) {\n            return;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Unable to post message because target window is not set.');\n        }\n\n        const result =\n            options &&\n            fromEvent<MessageEvent>(window, 'message')\n                .pipe(\n                    filter(\n                        (event) =>\n                            event.origin === this._targetOrigin &&\n                            isIframeEvent(event.data, event.data.type) &&\n                            [options.successType, options.errorType].indexOf(event.data.type) !==\n                                -1,\n                    ),\n                    map((event) => {\n                        if (options.errorType === event.data.type) {\n                            throw event.data;\n                        }\n\n                        return event.data;\n                    }),\n                    take(1),\n                )\n                .toPromise();\n\n        targetWindow.postMessage({ ...event, context: this._context }, this._targetOrigin);\n\n        return result;\n    }\n\n    setTarget(window: Window) {\n        this._targetWindow = window;\n    }\n\n    setContext(context: TContext) {\n        this._context = context;\n    }\n}\n","enum HostedFieldType {\n    CardCode = 'cardCode',\n    CardExpiry = 'cardExpiry',\n    CardName = 'cardName',\n    CardNumber = 'cardNumber',\n}\n\nexport default HostedFieldType;\n","enum ContentType {\n    Json = 'application/json',\n    JsonV1 = 'application/vnd.bc.v1+json',\n}\n\nexport default ContentType;\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport ContentType from '../common/http-request/content-type';\nimport HostedFormManualOrderData from '../hosted-form-manual-order-data';\nimport { HostedInputValues } from '../iframe-content';\n\nexport class ManualOrderPaymentRequestSender {\n    constructor(private _requestSender: RequestSender, private _paymentOrigin: string) {}\n\n    async submitPayment(\n        requestInitializationData: HostedFormManualOrderData,\n        instrumentFormData: HostedInputValues,\n        nonce?: string,\n    ): Promise<Response<unknown>> {\n        const { paymentMethodId, paymentSessionToken } = requestInitializationData;\n\n        const [expiryMonth, expiryYear] = instrumentFormData.cardExpiry\n            ? instrumentFormData.cardExpiry.split('/')\n            : [];\n\n        const options = {\n            headers: {\n                Accept: ContentType.Json,\n                'Content-Type': ContentType.Json,\n                'X-Payment-Session-Token': paymentSessionToken,\n            },\n            body: {\n                instrument: {\n                    type: 'card',\n                    name: instrumentFormData.cardName ?? '',\n                    number: instrumentFormData.cardNumber\n                        ? instrumentFormData.cardNumber.replace(/ /g, '')\n                        : '',\n                    expires: {\n                        month: Number(expiryMonth.trim()),\n                        year: Number(`20${expiryYear.trim()}`),\n                    },\n                    verification_value: instrumentFormData.cardCode ?? undefined,\n                },\n                payment_method_id: paymentMethodId,\n                form_nonce: nonce ?? undefined,\n            },\n        };\n\n        return this._requestSender.post<unknown>(`${this._paymentOrigin}/payments`, options);\n    }\n}\n","import CardExpiryDate from './card-expiry-date';\n\nconst NUMBER_SEPARATOR = '/';\n\nexport default class CardExpiryFormatter {\n    format(value: string): string {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n        const trimmedMonth = month.slice(0, 2);\n        const trimmedYear =\n            year.length === 4 ? year.slice(-2) : year ? year.slice(0, 2) : month.slice(2);\n\n        // i.e.: '1'\n        if (value.length < 2) {\n            return month;\n        }\n\n        // ie.: '10 /' (without trailing space)\n        if (value.length > 3 && !trimmedYear) {\n            return trimmedMonth;\n        }\n\n        return `${trimmedMonth} ${NUMBER_SEPARATOR} ${trimmedYear}`;\n    }\n\n    toObject(value: string): CardExpiryDate {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n\n        if (!/^\\d+$/.test(month) || !/^\\d+$/.test(year)) {\n            return { month: '', year: '' };\n        }\n\n        return {\n            month: month.length === 1 ? `0${month}` : month.slice(0, 2),\n            year: year.length === 2 ? `20${year}` : year.slice(0, 4),\n        };\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"card-validator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash\");","import { creditCardType, number } from 'card-validator';\nimport { max } from 'lodash';\n\nconst NUMBER_SEPARATOR = ' ';\n\nexport default class CardNumberFormatter {\n    format(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        const maxLength = max(creditCardType(value).map((info) => max(info.lengths)));\n        const unformattedValue = this.unformat(value).slice(0, maxLength);\n\n        return card.gaps\n            .filter((gapIndex) => unformattedValue.length > gapIndex)\n            .reduce(\n                (output, gapIndex, index) =>\n                    [output.slice(0, gapIndex + index), output.slice(gapIndex + index)].join(\n                        NUMBER_SEPARATOR,\n                    ),\n                unformattedValue,\n            );\n    }\n\n    unformat(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        return value.replace(new RegExp(NUMBER_SEPARATOR, 'g'), '');\n    }\n}\n","import HostedFieldType from '../hosted-field-type';\n\nexport default function mapToAutocompleteType(type: HostedFieldType): string {\n    switch (type) {\n        case HostedFieldType.CardCode:\n            return 'cc-csc';\n\n        case HostedFieldType.CardExpiry:\n            return 'cc-exp';\n\n        case HostedFieldType.CardName:\n            return 'cc-name';\n\n        case HostedFieldType.CardNumber:\n            return 'cc-number';\n\n        default:\n            return '';\n    }\n}\n","import { kebabCase } from 'lodash';\n\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport mapToAutocompleteType from './map-to-autocomplete-type';\n\nexport default class HostedAutocompleteFieldset {\n    private _inputs: HTMLInputElement[];\n\n    constructor(\n        private _form: HTMLFormElement,\n        private _fieldTypes: HostedFieldType[],\n        private _inputAggregator: HostedInputAggregator,\n    ) {\n        this._inputs = this._fieldTypes.map((type) => this._createInput(type));\n    }\n\n    attach(): void {\n        this._inputs.forEach((input) => this._form.appendChild(input));\n    }\n\n    detach(): void {\n        this._inputs.forEach((input) => {\n            if (!input.parentElement) {\n                return;\n            }\n\n            input.parentElement.removeChild(input);\n        });\n    }\n\n    private _createInput(type: HostedFieldType): HTMLInputElement {\n        const input = document.createElement('input');\n\n        input.autocomplete = mapToAutocompleteType(type);\n        input.id = this._getAutocompleteElementId(type);\n        input.tabIndex = -1;\n        input.style.position = 'absolute';\n        input.style.opacity = '0';\n        input.style.zIndex = '-1';\n\n        input.addEventListener('change', this._handleChange);\n\n        return input;\n    }\n\n    private _handleChange: (event: Event) => void = (event) => {\n        const targetInput = event.target as HTMLInputElement;\n\n        if (!targetInput) {\n            throw new Error('Unable to get a reference to the target of the change event.');\n        }\n\n        const targetHostedInput = this._inputAggregator\n            .getInputs()\n            .find((input) => this._getAutocompleteElementId(input.getType()) === targetInput.id);\n\n        if (!targetHostedInput) {\n            return;\n        }\n\n        targetHostedInput.setValue(targetInput.value);\n    };\n\n    private _getAutocompleteElementId(type: HostedFieldType): string {\n        return `autocomplete-${kebabCase(type)}`;\n    }\n}\n","import HostedFieldType from './hosted-field-type';\nimport HostedFormManualOrderData from './hosted-form-manual-order-data';\nimport { HostedFieldStylesMap } from './hosted-form-options';\nimport HostedFormOrderData from './hosted-form-order-data';\n\nexport enum HostedFieldEventType {\n    AttachRequested = 'HOSTED_FIELD:ATTACH_REQUESTED',\n    SubmitRequested = 'HOSTED_FIELD:SUBMITTED_REQUESTED',\n    SubmitManualOrderRequested = 'HOSTED_FIELD:SUBMIT_MANUAL_ORDER_REQUESTED',\n    ValidateRequested = 'HOSTED_FIELD:VALIDATE_REQUESTED',\n}\n\nexport interface HostedFieldEventMap {\n    [HostedFieldEventType.AttachRequested]: HostedFieldAttachEvent;\n    [HostedFieldEventType.SubmitManualOrderRequested]: HostedFieldSubmitManualOrderRequestEvent;\n    [HostedFieldEventType.ValidateRequested]: HostedFieldValidateRequestEvent;\n}\n\nexport type HostedFieldEvent =\n    | HostedFieldAttachEvent\n    | HostedFieldSubmitRequestEvent\n    | HostedFieldSubmitManualOrderRequestEvent\n    | HostedFieldValidateRequestEvent;\n\nexport interface HostedFieldSubmitRequestEvent {\n    type: HostedFieldEventType.SubmitRequested;\n    payload: {\n        data: HostedFormOrderData;\n        fields: HostedFieldType[];\n    };\n}\n\nexport interface HostedFieldAttachEvent {\n    type: HostedFieldEventType.AttachRequested;\n    payload: {\n        accessibilityLabel?: string;\n        fontUrls?: string[];\n        placeholder?: string;\n        styles?: HostedFieldStylesMap;\n        origin?: string;\n        type: HostedFieldType;\n    };\n}\n\nexport interface HostedFieldSubmitManualOrderRequestEvent {\n    type: HostedFieldEventType.SubmitManualOrderRequested;\n    payload: {\n        data: HostedFormManualOrderData;\n    };\n}\n\nexport interface HostedFieldValidateRequestEvent {\n    type: HostedFieldEventType.ValidateRequested;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { PaymentErrorData, PaymentErrorResponseBody } from '../errors';\nimport HostedFieldType from '../hosted-field-type';\nimport { HostedFormErrorsData } from '../hosted-form-options';\n\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\n\n// Event types\nexport enum HostedInputEventType {\n    AttachSucceeded = 'HOSTED_INPUT:ATTACH_SUCCEEDED',\n    AttachFailed = 'HOSTED_INPUT:ATTACH_FAILED',\n    BinChanged = 'HOSTED_INPUT:BIN_CHANGED',\n    Blurred = 'HOSTED_INPUT:BLURRED',\n    Changed = 'HOSTED_INPUT:CHANGED',\n    CardTypeChanged = 'HOSTED_INPUT:CARD_TYPE_CHANGED',\n    Entered = 'HOSTED_INPUT:ENTERED',\n    Focused = 'HOSTED_INPUT:FOCUSED',\n    SubmitSucceeded = 'HOSTED_INPUT:SUBMIT_SUCCEEDED',\n    SubmitFailed = 'HOSTED_INPUT:SUBMIT_FAILED',\n    SubmitManualOrderSucceeded = 'HOSTED_INPUT:SUBMIT_MANUAL_ORDER_SUCCEEDED',\n    SubmitManualOrderFailed = 'HOSTED_INPUT:SUBMIT_MANUAL_ORDER_FAILED',\n    Validated = 'HOSTED_INPUT:VALIDATED',\n    StoredCardSucceeded = 'HOSTED_INPUT:STORED_CARD_SUCCEEDED',\n    StoredCardFailed = 'HOSTED_INPUT:STORED_CARD_FAILED',\n}\n\n// Event mapping\nexport interface HostedInputEventMap {\n    [HostedInputEventType.AttachSucceeded]: HostedInputAttachSuccessEvent;\n    [HostedInputEventType.AttachFailed]: HostedInputAttachErrorEvent;\n    [HostedInputEventType.BinChanged]: HostedInputBinChangeEvent;\n    [HostedInputEventType.Blurred]: HostedInputBlurEvent;\n    [HostedInputEventType.Changed]: HostedInputChangeEvent;\n    [HostedInputEventType.CardTypeChanged]: HostedInputCardTypeChangeEvent;\n    [HostedInputEventType.Entered]: HostedInputEnterEvent;\n    [HostedInputEventType.Focused]: HostedInputFocusEvent;\n    [HostedInputEventType.SubmitManualOrderSucceeded]: HostedInputSubmitManualOrderSuccessEvent;\n    [HostedInputEventType.SubmitManualOrderFailed]: HostedInputSubmitManualOrderErrorEvent;\n    [HostedInputEventType.Validated]: HostedInputValidateEvent;\n}\n\n// Events\nexport type HostedInputEvent =\n    | HostedInputAttachSuccessEvent\n    | HostedInputAttachErrorEvent\n    | HostedInputBinChangeEvent\n    | HostedInputBlurEvent\n    | HostedInputChangeEvent\n    | HostedInputCardTypeChangeEvent\n    | HostedInputEnterEvent\n    | HostedInputFocusEvent\n    | HostedInputSubmitManualOrderSuccessEvent\n    | HostedInputSubmitManualOrderErrorEvent\n    | HostedInputValidateEvent;\n\nexport interface HostedInputAttachSuccessEvent {\n    type: HostedInputEventType.AttachSucceeded;\n}\n\nexport interface HostedInputAttachErrorEvent {\n    type: HostedInputEventType.AttachFailed;\n    payload: {\n        error: HostedInputInitializeErrorData;\n    };\n}\n\nexport interface HostedInputBinChangeEvent {\n    type: HostedInputEventType.BinChanged;\n    payload: {\n        bin?: string;\n    };\n}\n\nexport interface HostedInputBlurEvent {\n    type: HostedInputEventType.Blurred;\n    payload: {\n        fieldType: HostedFieldType;\n        errors?: HostedFormErrorsData;\n    };\n}\n\nexport interface HostedInputChangeEvent {\n    type: HostedInputEventType.Changed;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputCardTypeChangeEvent {\n    type: HostedInputEventType.CardTypeChanged;\n    payload: {\n        cardType?: string;\n    };\n}\n\nexport interface HostedInputFocusEvent {\n    type: HostedInputEventType.Focused;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputEnterEvent {\n    type: HostedInputEventType.Entered;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\nexport interface HostedInputSubmitManualOrderSuccessEvent {\n    type: HostedInputEventType.SubmitManualOrderSucceeded;\n}\n\nexport interface HostedInputSubmitManualOrderErrorEvent {\n    type: HostedInputEventType.SubmitManualOrderFailed;\n    payload: {\n        error: PaymentErrorData;\n        response?: Response<PaymentErrorResponseBody>;\n    };\n}\n\nexport interface HostedInputValidateEvent {\n    type: HostedInputEventType.Validated;\n    payload: HostedInputValidateResults;\n}\n\nexport interface HostedInputSubmitSuccessEvent {\n    type: HostedInputEventType.SubmitSucceeded;\n    payload: {\n        response: Response<unknown>;\n    };\n}\n\nexport interface HostedInputSubmitErrorEvent {\n    type: HostedInputEventType.SubmitFailed;\n    payload: {\n        error: PaymentErrorData;\n        response?: Response<PaymentErrorResponseBody>;\n    };\n}\n","import { kebabCase } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { parseUrl } from '../common/url';\nimport {\n    HostedFieldEventMap,\n    HostedFieldEventType,\n    HostedFieldValidateRequestEvent,\n} from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputManualOrderPaymentHandler from './hosted-input-manual-order-payment-handler';\nimport HostedInputStyles, { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\nimport HostedInputWindow from './hosted-input-window';\n\nexport default class HostedInput {\n    protected _input: HTMLInputElement;\n    protected _previousValue?: string;\n    private _fontLinks?: HTMLLinkElement[];\n    private _isTouched = false;\n\n    /**\n     * @internal\n     */\n    constructor(\n        protected _type: HostedFieldType,\n        protected _form: HTMLFormElement,\n        protected _placeholder: string,\n        protected _accessibilityLabel: string,\n        protected _autocomplete: string,\n        protected _styles: HostedInputStylesMap,\n        protected _fontUrls: string[],\n        protected _eventListener: IframeEventListener<HostedFieldEventMap>,\n        protected _eventPoster: IframeEventPoster<HostedInputEvent>,\n        protected _inputAggregator: HostedInputAggregator,\n        protected _inputValidator: HostedInputValidator,\n        protected _manualOrderPaymentHandler: HostedInputManualOrderPaymentHandler,\n    ) {\n        this._input = document.createElement('input');\n\n        this._input.addEventListener('input', this._handleInput);\n        this._input.addEventListener('blur', this._handleBlur);\n        this._input.addEventListener('focus', this._handleFocus);\n        this._eventListener.addListener(\n            HostedFieldEventType.ValidateRequested,\n            this._handleValidate,\n        );\n\n        this._eventListener.addListener(\n            HostedFieldEventType.SubmitManualOrderRequested,\n            this._manualOrderPaymentHandler.handle,\n        );\n\n        this._configureInput();\n    }\n\n    getType(): HostedFieldType {\n        return this._type;\n    }\n\n    getValue(): string {\n        return this._input.value;\n    }\n\n    setValue(value: string): void {\n        this._processChange(value);\n    }\n\n    isTouched(): boolean {\n        return this._isTouched;\n    }\n\n    attach(): void {\n        this._form.appendChild(this._input);\n        this._form.addEventListener('submit', this._handleSubmit);\n\n        this._loadFonts();\n\n        this._eventPoster.setTarget(window.parent);\n        this._eventListener.listen();\n\n        // fixes the issue on Firefox/Safari where the input doesn't focus properly\n        window.addEventListener('focus', this._forceFocusToInput);\n\n        // Assign itself to the global so it can be accessed by its sibling frames\n        (window as unknown as HostedInputWindow).hostedInput = this;\n\n        this._eventPoster.post({ type: HostedInputEventType.AttachSucceeded });\n    }\n\n    detach(): void {\n        if (this._input.parentElement) {\n            this._input.parentElement.removeChild(this._input);\n        }\n\n        this._form.removeEventListener('submit', this._handleSubmit);\n        this._unloadFonts();\n\n        window.removeEventListener('focus', this._forceFocusToInput);\n\n        this._eventListener.stopListen();\n    }\n\n    protected _formatValue(value: string): void {\n        this._input.value = value;\n    }\n\n    protected _notifyChange(_value: string): void {\n        this._eventPoster.post({\n            type: HostedInputEventType.Changed,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    }\n\n    private _configureInput(): void {\n        this._input.style.backgroundColor = 'transparent';\n        this._input.style.border = '0';\n        this._input.style.display = 'block';\n        this._input.style.height = '100%';\n        this._input.style.margin = '0';\n        this._input.style.outline = 'none';\n        this._input.style.padding = '0';\n        this._input.style.width = '100%';\n        this._input.id = kebabCase(this._type);\n        this._input.placeholder = this._placeholder;\n        this._input.autocomplete = this._autocomplete;\n\n        this._input.setAttribute('aria-label', this._accessibilityLabel);\n\n        this._applyStyles(this._styles.default);\n\n        switch (this._input.id) {\n            case 'card-code':\n            case 'card-expiry':\n            case 'card-number':\n                this._input.type = 'text';\n                this._input.inputMode = 'numeric';\n                this._input.pattern = '[0-9]*';\n                break;\n\n            case 'card-name':\n                this._input.type = 'text';\n                this._input.inputMode = 'text';\n                break;\n        }\n    }\n\n    private _applyStyles(styles: HostedInputStyles = {}): void {\n        const allowedStyles: {\n            [key in keyof Required<HostedInputStyles>]: HostedInputStyles[key];\n        } = {\n            color: styles.color,\n            fontFamily: styles.fontFamily,\n            fontSize: styles.fontSize,\n            fontWeight: styles.fontWeight,\n        };\n        const styleKeys = Object.keys(allowedStyles) as Array<keyof HostedInputStyles>;\n\n        styleKeys.forEach((key) => {\n            if (!allowedStyles[key]) {\n                return;\n            }\n\n            this._input.style[key] = allowedStyles[key] || '';\n        });\n    }\n\n    private _loadFonts(): void {\n        if (this._fontLinks) {\n            return;\n        }\n\n        this._fontLinks = this._fontUrls\n            .filter((url) => parseUrl(url).hostname === 'fonts.googleapis.com')\n            .filter((url) => !document.querySelector(`link[href='${url}'][rel='stylesheet']`))\n            .map((url) => {\n                const link = document.createElement('link');\n\n                link.rel = 'stylesheet';\n                link.href = url;\n\n                document.head.appendChild(link);\n\n                return link;\n            });\n    }\n\n    private _unloadFonts(): void {\n        if (!this._fontLinks) {\n            return;\n        }\n\n        this._fontLinks.forEach((link) => {\n            if (!link.parentElement) {\n                return;\n            }\n\n            link.parentElement.removeChild(link);\n        });\n\n        this._fontLinks = undefined;\n    }\n\n    private async _validateForm(): Promise<void> {\n        const values = this._inputAggregator.getInputValues();\n        const results = await this._inputValidator.validate(values);\n\n        if (results.isValid) {\n            this._applyStyles(this._styles.default);\n        } else {\n            this._applyStyles(this._styles.error);\n        }\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Validated,\n            payload: results,\n        });\n    }\n\n    private _processChange(value: string): void {\n        if (value === this._previousValue) {\n            return;\n        }\n\n        this._isTouched = true;\n\n        this._formatValue(value);\n        this._validateForm();\n        this._notifyChange(value);\n\n        this._previousValue = value;\n    }\n\n    private _handleInput: (event: Event) => void = (event) => {\n        const input = event.target as HTMLInputElement;\n\n        this._processChange(input.value);\n    };\n\n    private _handleBlur: (event: Event) => void = () => {\n        this._applyStyles(this._styles.default);\n        this._validateForm();\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Blurred,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _handleFocus: (event: Event) => void = () => {\n        this._applyStyles(this._styles.focus);\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Focused,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _handleValidate: (event: HostedFieldValidateRequestEvent) => void = () => {\n        this._validateForm();\n    };\n\n    private _handleSubmit: (event: Event) => void = (event) => {\n        event.preventDefault();\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Entered,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _forceFocusToInput = (): void => {\n        if (document.activeElement === document.body) {\n            const browserName = navigator.userAgent.toLowerCase();\n\n            if (browserName.indexOf('safari') > -1) {\n                if (this._input.value === '') {\n                    this._input.setAttribute('value', ' ');\n                    this._input.setSelectionRange(0, 1);\n                    this._input.setAttribute('value', '');\n                }\n            } else {\n                this._input.focus();\n            }\n        }\n    };\n}\n","import { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardExpiryFormatter from './card-expiry-formatter';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent } from './hosted-input-events';\nimport HostedInputManualOrderPaymentHandler from './hosted-input-manual-order-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedCardExpiryInput extends HostedInput {\n    /**\n     * @internal\n     */\n    constructor(\n        form: HTMLFormElement,\n        placeholder: string,\n        accessibilityLabel: string,\n        autocomplete: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        eventListener: IframeEventListener<HostedFieldEventMap>,\n        eventPoster: IframeEventPoster<HostedInputEvent>,\n        inputAggregator: HostedInputAggregator,\n        inputValidator: HostedInputValidator,\n        manualOrderPaymentHandler: HostedInputManualOrderPaymentHandler,\n        private _formatter: CardExpiryFormatter,\n    ) {\n        super(\n            HostedFieldType.CardExpiry,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            eventListener,\n            eventPoster,\n            inputAggregator,\n            inputValidator,\n            manualOrderPaymentHandler,\n        );\n    }\n\n    protected _formatValue(value: string): void {\n        this._input.value = this._formatter.format(value);\n    }\n}\n","import { number } from 'card-validator';\nimport { get } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardNumberFormatter from './card-number-formatter';\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputManualOrderPaymentHandler from './hosted-input-manual-order-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedCardNumberInput extends HostedInput {\n    /**\n     * @internal\n     */\n    constructor(\n        type: HostedFieldType,\n        form: HTMLFormElement,\n        placeholder: string,\n        accessibilityLabel: string,\n        autocomplete: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        eventListener: IframeEventListener<HostedFieldEventMap>,\n        eventPoster: IframeEventPoster<HostedInputEvent>,\n        inputAggregator: HostedInputAggregator,\n        inputValidator: HostedInputValidator,\n        manualOrderPaymentHandler: HostedInputManualOrderPaymentHandler,\n        private _autocompleteFieldset: HostedAutocompleteFieldset,\n        private _formatter: CardNumberFormatter,\n    ) {\n        super(\n            type,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            eventListener,\n            eventPoster,\n            inputAggregator,\n            inputValidator,\n            manualOrderPaymentHandler,\n        );\n    }\n\n    attach(): void {\n        super.attach();\n\n        this._autocompleteFieldset.attach();\n    }\n\n    protected _notifyChange(value: string): void {\n        const cardInfo = number(value).card;\n        const prevCardInfo = this._previousValue && number(this._previousValue).card;\n\n        if (get(prevCardInfo, 'type') !== get(cardInfo, 'type')) {\n            this._eventPoster.post({\n                type: HostedInputEventType.CardTypeChanged,\n                payload: {\n                    cardType: cardInfo ? cardInfo.type : undefined,\n                },\n            });\n        }\n\n        const unformattedValue = this._formatter.unformat(value);\n        const unformattedPreviousValue = this._previousValue\n            ? this._formatter.unformat(this._previousValue)\n            : '';\n\n        const bin =\n            unformattedValue.length >= 6 && number(unformattedValue).isPotentiallyValid\n                ? unformattedValue.substr(0, 6)\n                : '';\n        const prevBin =\n            unformattedPreviousValue.length >= 6 ? unformattedPreviousValue.substr(0, 6) : '';\n\n        if (bin !== prevBin) {\n            this._eventPoster.post({\n                type: HostedInputEventType.BinChanged,\n                payload: { bin },\n            });\n        }\n    }\n\n    protected _formatValue(value: string): void {\n        const selectionEnd = this._input.selectionEnd;\n        const formattedValue = this._formatter.format(value);\n\n        if (selectionEnd === value.length && value.length < formattedValue.length) {\n            this._input.setSelectionRange(formattedValue.length, formattedValue.length);\n        } else {\n            this._input.setSelectionRange(selectionEnd || 0, selectionEnd || 0);\n        }\n\n        this._input.value = formattedValue;\n    }\n}\n","import HostedInput from './hosted-input';\nimport HostedInputValues from './hosted-input-values';\nimport HostedInputWindow from './hosted-input-window';\n\nexport default class HostedInputAggregator {\n    constructor(private _parentWindow: Window) {}\n\n    getInputs(filter?: (field: HostedInput) => boolean): HostedInput[] {\n        return Array.prototype.slice\n            .call(this._parentWindow.frames)\n            .reduce((result: Window[], frame: Window) => {\n                try {\n                    const input = (frame as HostedInputWindow).hostedInput;\n\n                    if (!input || (filter && !filter(input))) {\n                        return result;\n                    }\n\n                    return [...result, input];\n                } catch (error) {\n                    if (error instanceof DOMException) {\n                        return result;\n                    }\n\n                    // IE11 doesn't throw `DOMException`\n                    if (error instanceof Error && error.message === 'Permission denied') {\n                        return result;\n                    }\n\n                    throw error;\n                }\n            }, []);\n    }\n\n    getInputValues(filter?: (field: HostedInput) => boolean): HostedInputValues {\n        return this.getInputs(filter).reduce((result, input) => {\n            return {\n                ...result,\n                [input.getType()]: input.getValue(),\n            };\n        }, {} as HostedInputValues);\n    }\n}\n","import { flatMap, map, values } from 'lodash';\n\nimport { StandardError } from '../common/errors';\nimport { HostedInputValidateErrorDataMap } from '../iframe-content';\n\nexport default class InvalidHostedFormValueError extends StandardError {\n    constructor(public errors: HostedInputValidateErrorDataMap) {\n        super(\n            [\n                'Unable to proceed due to invalid user input values',\n                ...flatMap(values(errors), (fieldErrors) =>\n                    map(fieldErrors, ({ message }) => message),\n                ),\n            ].join('. '),\n        );\n\n        this.name = 'InvalidHostedFormValueError';\n        this.type = 'invalid_hosted_form_value';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\nimport { get, isString, snakeCase } from 'lodash';\n\nimport { IframeEventPoster } from '../common/iframe';\nimport { InvalidHostedFormValueError, PaymentErrorResponseBody } from '../errors';\nimport { HostedFieldSubmitManualOrderRequestEvent } from '../hosted-field-events';\nimport { ManualOrderPaymentRequestSender } from '../payment';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputStorage from './hosted-input-storage';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedInputManualOrderPaymentHandler {\n    constructor(\n        private _inputAggregator: HostedInputAggregator,\n        private _inputValidator: HostedInputValidator,\n        private _inputStorage: HostedInputStorage,\n        private _eventPoster: IframeEventPoster<HostedInputEvent>,\n        private _manualOrderPaymentRequestSender: ManualOrderPaymentRequestSender,\n    ) {}\n\n    handle: (event: HostedFieldSubmitManualOrderRequestEvent) => Promise<void> = async (event) => {\n        const {\n            payload: { data },\n        } = event;\n        const values = this._inputAggregator.getInputValues();\n        const results = await this._inputValidator.validate(values);\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Validated,\n            payload: results,\n        });\n\n        if (!results.isValid) {\n            const error = new InvalidHostedFormValueError(results.errors);\n\n            return this._eventPoster.post({\n                type: HostedInputEventType.SubmitManualOrderFailed,\n                payload: {\n                    error: { code: snakeCase(error.name), message: error.message },\n                },\n            });\n        }\n\n        try {\n            const response = await this._manualOrderPaymentRequestSender.submitPayment(\n                data,\n                values,\n                this._inputStorage.getNonce(),\n            );\n\n            const isFailure =\n                get(response.body, 'type') === 'failure' && isString(get(response.body, 'code'));\n            const isSuccess = get(response.body, 'type') === 'success';\n            const isError = get(response.body, 'type') === 'error';\n\n            if (isFailure) {\n                this._eventPoster.post({\n                    type: HostedInputEventType.SubmitManualOrderFailed,\n                    payload: {\n                        error: { code: get(response.body, 'code') },\n                    },\n                });\n            } else if (isError) {\n                this._eventPoster.post({\n                    type: HostedInputEventType.SubmitManualOrderFailed,\n                    payload: {\n                        error: { code: get(response.body, 'type') },\n                    },\n                });\n            } else if (isSuccess) {\n                this._eventPoster.post({\n                    type: HostedInputEventType.SubmitManualOrderSucceeded,\n                });\n            }\n        } catch (error) {\n            if (this._isPaymentErrorResponse(error)) {\n                this._eventPoster.post({\n                    type: HostedInputEventType.SubmitManualOrderFailed,\n                    payload: { error: error.body.errors[0], response: error },\n                });\n            } else if (this._isErrorResponse(error)) {\n                this._eventPoster.post({\n                    type: HostedInputEventType.SubmitManualOrderFailed,\n                    payload: { error: { code: snakeCase(error.name), message: error.message } },\n                });\n            }\n        }\n    };\n\n    private _isPaymentErrorResponse(response: any): response is Response<PaymentErrorResponseBody> {\n        const { body: { errors = [] } = {} } = response || {};\n\n        return (\n            typeof (errors[0] && errors[0].code) === 'string' &&\n            typeof (errors[0] && errors[0].message) === 'string'\n        );\n    }\n\n    private _isErrorResponse(error: unknown): error is { name?: string; message?: string } {\n        return (\n            typeof error === 'object' &&\n            error !== null &&\n            (('name' in error && typeof (error as { name: unknown }).name === 'string') ||\n                !('name' in error)) &&\n            (('message' in error && typeof (error as { message: unknown }).message === 'string') ||\n                !('message' in error))\n        );\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"yup\");","import { creditCardType, cvv, expirationDate, number } from 'card-validator';\nimport { object, ObjectShape, string, StringSchema, ValidationError } from 'yup';\n\nimport { HostedInputValidateErrorDataMap } from './hosted-input-validate-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\nimport HostedInputValues from './hosted-input-values';\n\nexport default class HostedInputValidator {\n    private readonly _completeSchema: ObjectShape = {\n        cardCode: this._getCardCodeSchema(),\n        cardExpiry: this._getCardExpirySchema(),\n        cardName: this._getCardNameSchema(),\n        cardNumber: this._getCardNumberSchema(),\n    };\n\n    constructor() {\n        this._configureCardValidator();\n    }\n\n    async validate(values: HostedInputValues): Promise<HostedInputValidateResults> {\n        const schemas: ObjectShape = {};\n        const results: HostedInputValidateResults = {\n            errors: {},\n            isValid: true,\n        };\n\n        let requiredField: keyof HostedInputValues;\n\n        for (requiredField in values) {\n            if (Object.prototype.hasOwnProperty.call(values, requiredField)) {\n                schemas[requiredField] = this._completeSchema[requiredField];\n                results.errors[requiredField] = [];\n            }\n        }\n\n        try {\n            await object(schemas).validate(values, { abortEarly: false });\n\n            return results;\n        } catch (error) {\n            if (this._isValidationErrorType(error)) {\n                throw error;\n            }\n\n            return {\n                errors: (\n                    Object.keys(results.errors) as Array<keyof HostedInputValidateErrorDataMap>\n                ).reduce(\n                    (result, fieldType) => ({\n                        ...result,\n                        [fieldType]: (error as ValidationError).inner\n                            .filter((innerError) => innerError.path === fieldType)\n                            .map((innerError) => ({\n                                fieldType: innerError.path,\n                                message: innerError.errors.join(' '),\n                                type: innerError.type,\n                            })),\n                    }),\n                    {} as HostedInputValidateErrorDataMap,\n                ),\n                isValid: false,\n            };\n        }\n    }\n\n    private _configureCardValidator(): void {\n        const discoverInfo = creditCardType.getTypeInfo('discover');\n        const visaInfo = creditCardType.getTypeInfo('visa');\n\n        // Need to support 13 digit PAN because some gateways only provide test credit card numbers in this format.\n        creditCardType.updateCard('visa', {\n            lengths: [13, ...(visaInfo.lengths || [])],\n        });\n\n        // Add support for 8-BIN Discover Cards.\n        creditCardType.updateCard('discover', {\n            patterns: [...(discoverInfo.patterns || []), [810, 817]],\n        });\n\n        creditCardType.addCard({\n            niceType: 'Mada',\n            type: 'mada',\n            patterns: [\n                400861, 401757, 407197, 407395, 409201, 410685, 412565, 417633, 419593, 422817,\n                422818, 422819, 428331, 428671, 428672, 428673, 431361, 432328, 434107, 439954,\n                440533, 440647, 440795, 445564, 446393, 446404, 446672, 455036, 455708, 457865,\n                458456, 462220, 468540, 468541, 468542, 468543, 483010, 483011, 483012, 484783,\n                486094, 486095, 486096, 489317, 489318, 489319, 493428, 504300, 506968, 508160,\n                513213, 520058, 521076, 524130, 524514, 529415, 529741, 530060, 530906, 531095,\n                531196, 532013, 535825, 535989, 536023, 537767, 539931, 543085, 543357, 549760,\n                554180, 557606, 558848, 585265, 588845, 588846, 588847, 588848, 588849, 588850,\n                588851, 588982, 588983, 589005, 589206, 604906, 605141, 636120, 968201, 968202,\n                968203, 968204, 968205, 968206, 968207, 968208, 968209, 968210, 968211,\n            ],\n            gaps: [4, 8, 12],\n            lengths: [16, 18, 19],\n            code: {\n                name: 'CVV',\n                size: 3,\n            },\n        });\n    }\n\n    private _getCardCodeSchema(): StringSchema {\n        return string()\n            .required('CVV is required')\n            .test({\n                message: 'CVV must be valid',\n                name: 'invalid_card_code',\n                test(value) {\n                    const { card } = number((this.parent as HostedInputValues).cardNumber || '');\n\n                    return cvv(value, card && card.code ? card.code.size : undefined).isValid;\n                },\n            });\n    }\n\n    private _getCardExpirySchema(): StringSchema {\n        return string()\n            .required('Expiration date is required')\n            .test({\n                message: 'Expiration date must be a valid future date in MM / YY format',\n                name: 'invalid_card_expiry',\n                test: (value) => expirationDate(value).isValid,\n            });\n    }\n\n    private _getCardNameSchema(): StringSchema {\n        return string().max(200).required('Full name is required');\n    }\n\n    private _getCardNumberSchema(): StringSchema {\n        return string()\n            .required('Credit card number is required')\n            .test({\n                message: 'Credit card number must be valid',\n                name: 'invalid_card_number',\n                test: (value) => number(value).isValid,\n            });\n    }\n\n    private _isValidationErrorType(error: any): error is { name: string } {\n        return 'name' in error && error.name !== 'ValidationError';\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { appendWww, parseUrl } from '../common/url';\nimport HostedFieldType from '../hosted-field-type';\nimport { ManualOrderPaymentRequestSender } from '../payment';\n\nimport CardExpiryFormatter from './card-expiry-formatter';\nimport CardNumberFormatter from './card-number-formatter';\nimport getHostedInputStorage from './get-hosted-input-storage';\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\nimport HostedCardExpiryInput from './hosted-card-expiry-input';\nimport HostedCardNumberInput from './hosted-card-number-input';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport HostedInputManualOrderPaymentHandler from './hosted-input-manual-order-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\nimport mapToAccessibilityLabel from './map-to-accessibility-label';\nimport mapToAutocompleteType from './map-to-autocomplete-type';\n\nexport default class HostedInputFactory {\n    constructor(private _parentOrigin: string, private _paymentOrigin: string) {}\n\n    create(\n        form: HTMLFormElement,\n        type: HostedFieldType,\n        styles: HostedInputStylesMap = {},\n        fontUrls: string[] = [],\n        placeholder = '',\n        accessibilityLabel: string = mapToAccessibilityLabel(type),\n    ): HostedInput {\n        const autocomplete = mapToAutocompleteType(type);\n\n        if (type === HostedFieldType.CardNumber) {\n            return this._createNumberInput(\n                type,\n                form,\n                styles,\n                fontUrls,\n                placeholder,\n                accessibilityLabel,\n                autocomplete,\n            );\n        }\n\n        if (type === HostedFieldType.CardExpiry) {\n            return this._createExpiryInput(\n                form,\n                styles,\n                fontUrls,\n                placeholder,\n                accessibilityLabel,\n                autocomplete,\n            );\n        }\n\n        return this._createInput(\n            type,\n            form,\n            styles,\n            fontUrls,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n        );\n    }\n\n    normalizeParentOrigin(origin: string): void {\n        if (this._parentOrigin === origin) {\n            return;\n        }\n\n        if (\n            this._parentOrigin !== appendWww(parseUrl(origin)).origin &&\n            origin !== appendWww(parseUrl(this._parentOrigin)).origin\n        ) {\n            return;\n        }\n\n        this._parentOrigin = origin;\n    }\n\n    getParentOrigin(): string {\n        return this._parentOrigin;\n    }\n\n    private _createExpiryInput(\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel = '',\n        autocomplete = '',\n    ): HostedCardExpiryInput {\n        return new HostedCardExpiryInput(\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            this._createManualOrderPaymentHandler(),\n            new CardExpiryFormatter(),\n        );\n    }\n\n    private _createNumberInput(\n        type: HostedFieldType,\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel = '',\n        autocomplete = '',\n    ): HostedCardNumberInput {\n        return new HostedCardNumberInput(\n            type,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            this._createManualOrderPaymentHandler(),\n            new HostedAutocompleteFieldset(\n                form,\n                [HostedFieldType.CardCode, HostedFieldType.CardExpiry, HostedFieldType.CardName],\n                new HostedInputAggregator(window.parent),\n            ),\n            new CardNumberFormatter(),\n        );\n    }\n\n    private _createInput(\n        type: HostedFieldType,\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel = '',\n        autocomplete = '',\n    ): HostedInput {\n        return new HostedInput(\n            type,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            this._createManualOrderPaymentHandler(),\n        );\n    }\n\n    private _createManualOrderPaymentHandler(): HostedInputManualOrderPaymentHandler {\n        return new HostedInputManualOrderPaymentHandler(\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            getHostedInputStorage(),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new ManualOrderPaymentRequestSender(createRequestSender(), this._paymentOrigin),\n        );\n    }\n}\n","import HostedFieldType from '../hosted-field-type';\n\nexport default function mapToAccessibilityLabel(type: HostedFieldType): string {\n    switch (type) {\n        case HostedFieldType.CardCode:\n            return 'CVC';\n\n        case HostedFieldType.CardExpiry:\n            return 'Expiration';\n\n        case HostedFieldType.CardName:\n            return 'Name on card';\n\n        case HostedFieldType.CardNumber:\n            return 'Credit card number';\n    }\n}\n","import { StandardError } from '../common/errors';\n\nexport default class InvalidHostedFormConfigError extends StandardError {\n    constructor(message?: string) {\n        super(\n            message ||\n                'Unable to proceed due to invalid configuration provided for the hosted payment form.',\n        );\n\n        this.name = 'InvalidHostedFormConfigError';\n        this.type = 'invalid_hosted_form_config';\n    }\n}\n","import { fromEvent } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { IframeEventListener } from '../common/iframe';\nimport { InvalidHostedFormConfigError } from '../errors';\nimport {\n    HostedFieldAttachEvent,\n    HostedFieldEventMap,\n    HostedFieldEventType,\n} from '../hosted-field-events';\n\nimport HostedInput from './hosted-input';\nimport HostedInputFactory from './hosted-input-factory';\nimport HostedInputStorage from './hosted-input-storage';\n\ninterface EventTargetLike<TEvent> {\n    addListener(eventName: string, handler: (event: TEvent) => void): void;\n    removeListener(eventName: string, handler: (event: TEvent) => void): void;\n}\n\nexport default class HostedInputInitializer {\n    constructor(\n        private _factory: HostedInputFactory,\n        private _storage: HostedInputStorage,\n        private _eventListener: IframeEventListener<HostedFieldEventMap>,\n    ) {}\n\n    initialize(containerId: string, nonce?: string): Promise<HostedInput> {\n        if (nonce) {\n            this._storage.setNonce(nonce);\n        }\n\n        const form = this._createFormContainer(containerId);\n\n        this._resetPageStyles(containerId);\n        this._eventListener.listen();\n\n        return fromEvent<HostedFieldAttachEvent>(\n            this._eventListener as EventTargetLike<HostedFieldAttachEvent>,\n            HostedFieldEventType.AttachRequested,\n        )\n            .pipe(\n                map(({ payload }) => {\n                    const { accessibilityLabel, fontUrls, placeholder, styles, origin, type } =\n                        payload;\n\n                    if (origin) {\n                        this._factory.normalizeParentOrigin(origin);\n                    }\n\n                    const field = this._factory.create(\n                        form,\n                        type,\n                        styles,\n                        fontUrls,\n                        placeholder,\n                        accessibilityLabel,\n                    );\n\n                    field.attach();\n\n                    return field;\n                }),\n                take(1),\n            )\n            .toPromise();\n    }\n\n    private _resetPageStyles(containerId: string) {\n        const html = document.querySelector('html');\n        const body = document.querySelector('body');\n        const container = document.getElementById(containerId);\n\n        [html, body, container].forEach((node) => {\n            if (!node) {\n                return;\n            }\n\n            node.style.height = '100%';\n            node.style.width = '100%';\n            node.style.overflow = 'hidden';\n            node.style.padding = '0';\n            node.style.margin = '0';\n        });\n    }\n\n    private _createFormContainer(containerId: string): HTMLFormElement {\n        const container = document.getElementById(containerId);\n\n        if (!container) {\n            throw new InvalidHostedFormConfigError(\n                'Unable to proceed because the provided container ID is not valid.',\n            );\n        }\n\n        const form = document.createElement('form');\n        const button = document.createElement('button');\n\n        form.noValidate = true;\n        form.style.height = '100%';\n        form.style.width = '100%';\n        button.style.display = 'none';\n\n        container.appendChild(form);\n        form.appendChild(button);\n\n        return form;\n    }\n}\n","import { IframeEventListener } from '../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\n\nimport getHostedInputStorage from './get-hosted-input-storage';\nimport HostedInput from './hosted-input';\nimport HostedInputFactory from './hosted-input-factory';\nimport HostedInputInitializer from './hosted-input-initializer';\nimport HostedInputOptions from './hosted-input-options';\n\nexport default function initializeHostedInput(options: HostedInputOptions): Promise<HostedInput> {\n    const { containerId, nonce, parentOrigin, paymentOrigin } = options;\n    const initializer = new HostedInputInitializer(\n        new HostedInputFactory(parentOrigin, paymentOrigin),\n        getHostedInputStorage(),\n        new IframeEventListener<HostedFieldEventMap>(parentOrigin),\n    );\n\n    return initializer.initialize(containerId, nonce);\n}\n","import { IframeEventPoster } from '../common/iframe';\n\nimport { HostedInputAttachErrorEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\n\nconst poster = new IframeEventPoster<HostedInputAttachErrorEvent>('*', window.parent);\n\nexport default function notifyInitializeError(error: HostedInputInitializeErrorData): void {\n    poster.post({\n        type: HostedInputEventType.AttachFailed,\n        payload: { error },\n    });\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","message","object","name","type","setPrototypeOf","__proto__","Error","captureStackTrace","stack","parseUrl","url","test","anchor","document","createElement","href","port","indexOf","hostname","hash","origin","protocol","pathname","search","appendWww","replace","target","descriptor","bindMethodDecorator","decoratedTarget","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","bindClassDecorator","_","method","boundMethod","bind","this","set","isIframeEvent","sourceOrigin","_sourceOrigins","_isListening","_listeners","listen","window","addEventListener","_handleMessage","stopListen","removeEventListener","addListener","listener","listeners","push","removeListener","index","splice","trigger","event","context","messageEvent","data","setNonce","nonce","_nonce","getNonce","storage","getHostedInputStorage","require","targetOrigin","_targetWindow","_context","_targetOrigin","post","options","targetWindow","result","fromEvent","pipe","filter","successType","errorType","map","take","toPromise","postMessage","setTarget","setContext","HostedFieldType","ContentType","_requestSender","_paymentOrigin","submitPayment","requestInitializationData","instrumentFormData","paymentMethodId","paymentSessionToken","cardExpiry","split","expiryMonth","expiryYear","headers","Accept","Json","body","instrument","cardName","number","cardNumber","expires","month","Number","trim","year","verification_value","cardCode","undefined","payment_method_id","form_nonce","format","RegExp","trimmedMonth","slice","trimmedYear","length","toObject","card","maxLength","max","creditCardType","info","lengths","unformattedValue","unformat","gaps","gapIndex","reduce","output","join","mapToAutocompleteType","CardCode","CardExpiry","CardName","CardNumber","_form","_fieldTypes","_inputAggregator","_handleChange","targetInput","targetHostedInput","getInputs","find","input","_getAutocompleteElementId","getType","id","setValue","_inputs","_createInput","attach","appendChild","detach","parentElement","removeChild","autocomplete","tabIndex","style","position","opacity","zIndex","kebabCase","HostedFieldEventType","HostedInputEventType","_type","_placeholder","_accessibilityLabel","_autocomplete","_styles","_fontUrls","_eventListener","_eventPoster","_inputValidator","_manualOrderPaymentHandler","_isTouched","_handleInput","_processChange","_handleBlur","_applyStyles","default","_validateForm","Blurred","payload","fieldType","_handleFocus","focus","Focused","_handleValidate","_handleSubmit","preventDefault","Entered","_forceFocusToInput","activeElement","navigator","userAgent","toLowerCase","_input","setAttribute","setSelectionRange","ValidateRequested","SubmitManualOrderRequested","handle","_configureInput","getValue","isTouched","_loadFonts","parent","hostedInput","AttachSucceeded","_unloadFonts","_formatValue","_notifyChange","_value","Changed","backgroundColor","border","display","height","margin","outline","padding","width","placeholder","inputMode","pattern","styles","allowedStyles","color","fontFamily","fontSize","fontWeight","keys","_fontLinks","querySelector","link","rel","head","values","getInputValues","validate","results","isValid","error","Validated","_previousValue","form","accessibilityLabel","fontUrls","eventListener","eventPoster","inputAggregator","inputValidator","manualOrderPaymentHandler","_formatter","_autocompleteFieldset","cardInfo","prevCardInfo","CardTypeChanged","cardType","unformattedPreviousValue","bin","isPotentiallyValid","substr","BinChanged","selectionEnd","formattedValue","_parentWindow","Array","frames","frame","DOMException","errors","flatMap","fieldErrors","_inputStorage","_manualOrderPaymentRequestSender","SubmitManualOrderFailed","code","snakeCase","response","isFailure","isString","isSuccess","isError","SubmitManualOrderSucceeded","_isPaymentErrorResponse","_isErrorResponse","_completeSchema","_getCardCodeSchema","_getCardExpirySchema","_getCardNameSchema","_getCardNumberSchema","_configureCardValidator","requiredField","schemas","abortEarly","_isValidationErrorType","inner","innerError","path","discoverInfo","getTypeInfo","visaInfo","updateCard","patterns","addCard","niceType","size","string","required","cvv","expirationDate","_parentOrigin","create","mapToAccessibilityLabel","_createNumberInput","_createExpiryInput","normalizeParentOrigin","getParentOrigin","_createManualOrderPaymentHandler","ManualOrderPaymentRequestSender","createRequestSender","_factory","_storage","initialize","containerId","_createFormContainer","_resetPageStyles","AttachRequested","field","getElementById","node","overflow","container","button","noValidate","initializeHostedInput","parentOrigin","paymentOrigin","poster","notifyInitializeError","AttachFailed"],"sourceRoot":""}